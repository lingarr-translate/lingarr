// <auto-generated />
using System;
using Lingarr.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lingarr.Migrations.MySQL.Migrations
{
    [DbContext(typeof(LingarrDbContext))]
    [Migration("20241001201954_UpdateDataSchema")]
    partial class UpdateDataSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Lingarr.Core.Entities.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int")
                        .HasColumnName("episode_number");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext")
                        .HasColumnName("file_name");

                    b.Property<string>("MediaHash")
                        .HasColumnType("longtext")
                        .HasColumnName("media_hash");

                    b.Property<string>("Path")
                        .HasColumnType("longtext")
                        .HasColumnName("path");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int")
                        .HasColumnName("season_id");

                    b.Property<int>("SonarrId")
                        .HasColumnType("int")
                        .HasColumnName("sonarr_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_episodes");

                    b.HasIndex("SeasonId")
                        .HasDatabaseName("ix_episodes_season_id");

                    b.ToTable("episodes", (string)null);
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("path");

                    b.Property<int?>("ShowId")
                        .HasColumnType("int")
                        .HasColumnName("show_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("MovieId")
                        .HasDatabaseName("ix_images_movie_id");

                    b.HasIndex("ShowId")
                        .HasDatabaseName("ix_images_show_id");

                    b.ToTable("images", (string)null);
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_added");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("file_name");

                    b.Property<string>("MediaHash")
                        .HasColumnType("longtext")
                        .HasColumnName("media_hash");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("path");

                    b.Property<int>("RadarrId")
                        .HasColumnType("int")
                        .HasColumnName("radarr_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_movies");

                    b.ToTable("movies", (string)null);
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Path")
                        .HasColumnType("longtext")
                        .HasColumnName("path");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int")
                        .HasColumnName("season_number");

                    b.Property<int>("ShowId")
                        .HasColumnType("int")
                        .HasColumnName("show_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_seasons");

                    b.HasIndex("ShowId")
                        .HasDatabaseName("ix_seasons_show_id");

                    b.ToTable("seasons", (string)null);
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("value");

                    b.HasKey("Key")
                        .HasName("pk_settings");

                    b.ToTable("settings", (string)null);
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_added");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("path");

                    b.Property<int>("SonarrId")
                        .HasColumnType("int")
                        .HasColumnName("sonarr_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_shows");

                    b.ToTable("shows", (string)null);
                });

            modelBuilder.Entity("Lingarr.Core.Entities.TranslationJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("completed");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("job_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_translation_jobs");

                    b.ToTable("translation_jobs", (string)null);
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Episode", b =>
                {
                    b.HasOne("Lingarr.Core.Entities.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_episodes_seasons_season_id");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Image", b =>
                {
                    b.HasOne("Lingarr.Core.Entities.Movie", "Movie")
                        .WithMany("Images")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("fk_images_movies_movie_id");

                    b.HasOne("Lingarr.Core.Entities.Show", "Show")
                        .WithMany("Images")
                        .HasForeignKey("ShowId")
                        .HasConstraintName("fk_images_shows_show_id");

                    b.Navigation("Movie");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Season", b =>
                {
                    b.HasOne("Lingarr.Core.Entities.Show", "Show")
                        .WithMany("Seasons")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_seasons_shows_show_id");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Movie", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Season", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("Lingarr.Core.Entities.Show", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
